% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/design-flex.R
\name{flex}
\alias{flex}
\title{Understanding responsive arguments}
\usage{
flex(
  x,
  direction = NULL,
  justify = NULL,
  align = NULL,
  wrap = NULL,
  reverse = NULL
)
}
\arguments{
\item{x}{A tag element or \link{.style} pronoun.}

\item{direction}{A \link{responsive} argument. One of \code{"row"} or \code{"column"}
specifying the placement of flex items, defaults to \code{NULL}. If \code{"row"}
items are placed vertically, if \code{"column"} items are placed horizontally.
Browsers place items vertically by default.}

\item{justify}{A \link{responsive} argument. One of \code{"start"}, \code{"end"},
\code{"center"}, \code{"between"}, or \code{"around"} specifying how items are
horizontally aligned, defaults to \code{NULL}. See the \strong{justify} section below
for more on how the different values affect horizontal spacing.}

\item{align}{A \link{responsive} argument. One of \code{"start"}, \code{"end"}, \code{"center"},
\code{"baseline"}, or \code{"stretch"} specifying how items are vertically aligned,
defaults to \code{NULL}. See the \strong{align} section below for more on how the
different values affect vertical spacing.}

\item{wrap}{A \link{responsive} argument. One of \code{TRUE} or \code{FALSE} specifying
whether to wrap flex items inside the flex container, \code{tag}, defaults to
\code{NULL}. If \code{TRUE} items wrap inside the container, if \code{FALSE} items will
not wrap. See the \strong{wrap} section below for more.}

\item{reverse}{A \link{responsive} argument. One of \code{TRUE} or \code{FALSE} specifying
if flex items are placed in reverse order, defaults to \code{NULL}. If \code{TRUE}
items are placed from right to left when \code{direction} is \code{"row"} or bottom
to top when \code{direction} is \code{"column"}.}
}
\description{
A responsive argument may be a single value or a named list. Possible names
includes \code{default} or \code{xs}, \code{sm}, \code{md}, \code{lg}, and \code{xl}. Specifying a single
unnamed value is equivalent to specifying \code{default} or \code{xs}. The possible
values will be described in the specific help page. Most responsive arguments
will default to \code{NULL} in which case no corresponding style is applied.

Responsive arguments allow you to apply styles to tag elements based on the
size of the viewport. This is important when developing applications for both
web and mobile.  Specifying a single unnamed value the style will be applied
for all viewport sizes. Use the names above to apply a style for viewports of
that size and larger. For example, specifying \code{list(default = x, md = y)}
will apply \code{x} on extra small and small viewports, but for medium, large, and
extra large viewports \code{y} is applied.

Styles for larger viewports take precedence. See below for details about each
breakpoint.

\strong{extra small}

How: pass a single value, use name \code{xs}, or use name \code{default}.

When: the style is always applied, unless supplanted by a style for any other
viewport size.

\strong{small}

How: use name \code{sm}.

When: the style is applied when the viewport is at least 576px wide, think
landscape phones.

\strong{medium}

How: use name \code{md}.

When: the style is applied when the viewport is at least 768px wide, think
tablets.

\strong{large}

How: use name \code{lg}.

When: the style is applied when the viewport is at least 992px wide, think
laptop or smaller desktops.

\strong{extra large}

How: use name \code{xl}.

When: the style is applied when the viewport is at least 1200px wide, think
large desktops.
Flex layout

Use \code{flex()} to control how a flex container tag element places its flex
items or child tag elements. For more on turning a tag element into a flex
container see \code{\link[=display]{display()}}. By default tag elements within a flex container
are treated as flex items.
}
\examples{

div() \%>\% flex()
# ->
div() \%>\% cascadess::flex_display()

}
\keyword{internal}
