% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-button-group.R
\name{buttonGroupInput}
\alias{buttonGroupInput}
\alias{updateButtonGroupInput}
\title{Button group inputs}
\usage{
buttonGroupInput(
  ...,
  id,
  choices = NULL,
  values = choices,
  direction = "horizontal"
)

updateButtonGroupInput(
  id,
  choices = NULL,
  values = choices,
  enable = NULL,
  disable = NULL,
  session = getDefaultReactiveDomain()
)
}
\arguments{
\item{...}{Additional named arguments passed as HTML attributes to the parent
element.}

\item{id}{A character string specifying the id of the reactive input.}

\item{choices}{A character vector specifying the labels for each button in
the group.}

\item{values}{A character vector specifying the values of each button in the
group, defaults to \code{choices}.}

\item{direction}{One of \code{"horizontal"} or \code{"vertical"} specifying the layout
of the buttons, defaults to \code{"horizontal"}.}

\item{enable}{One of \code{values} indicating individual buttons to enable or
\code{TRUE} to enable the entire input, defaults to \code{NULL}.}

\item{disable}{One of \code{values} indicating individual buttons to disable or
\code{TRUE} to disable the entire input, defaults to \code{NULL}.}

\item{session}{A reactive context, defaults to \code{\link[=getDefaultReactiveDomain]{getDefaultReactiveDomain()}}.}
}
\description{
A set of buttons with custom values.
}
\details{
\subsection{Layout options}{

Button groups can be laid in two directions, horizontal or vertical.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{buttonGroupInput(
  .style \%>\%
    background("primary"),
  id = NULL,
  choices = c("Grape", "Raspberry", "Kiwi")
)
}\if{html}{\out{</div>}}\if{html}{\out{
<div class="yonder-button-group btn-group btn-group-primary" role="group">
<button type="button" class="btn" value="Grape">Grape</button>
<button type="button" class="btn" value="Raspberry">Raspberry</button>
<button type="button" class="btn" value="Kiwi">Kiwi</button>
</div>
}}


Vertical button groups can help fill available space.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{buttonGroupInput(
  .style \%>\%
    background("primary"),
  id = NULL,
  choices = c("Cherry", "Apple", "Pear")
)
}\if{html}{\out{</div>}}\if{html}{\out{
<div class="yonder-button-group btn-group btn-group-primary" role="group">
<button type="button" class="btn" value="Cherry">Cherry</button>
<button type="button" class="btn" value="Apple">Apple</button>
<button type="button" class="btn" value="Pear">Pear</button>
</div>
}}


\if{html}{\out{<div class="sourceCode r">}}\preformatted{buttonGroupInput(
  id = "group1",
  choices = c("Once", "Twice", "Thrice"),
  values = c(1, 2, 3)
)
}\if{html}{\out{</div>}}\if{html}{\out{
<div class="yonder-button-group btn-group" id="group1" role="group">
<button type="button" class="btn" value="1">Once</button>
<button type="button" class="btn" value="2">Twice</button>
<button type="button" class="btn" value="3">Thrice</button>
</div>
}}

}

\subsection{Styling the button group}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{buttonGroupInput(
  .style \%>\%
    background("primary"),
  id = "group2",
  choices = c("Button 1", "Button 2", "Button 3")
)
}\if{html}{\out{</div>}}\if{html}{\out{
<div class="yonder-button-group btn-group btn-group-primary" id="group2" role="group">
<button type="button" class="btn" value="Button 1">Button 1</button>
<button type="button" class="btn" value="Button 2">Button 2</button>
<button type="button" class="btn" value="Button 3">Button 3</button>
</div>
}}

}
}
\seealso{
Other inputs: 
\code{\link{buttonInput}()},
\code{\link{checkbarInput}()},
\code{\link{checkboxInput}()},
\code{\link{chipInput}()},
\code{\link{fileInput}()},
\code{\link{formInput}()},
\code{\link{listGroupInput}()},
\code{\link{menuInput}()},
\code{\link{navInput}()},
\code{\link{radioInput}()},
\code{\link{radiobarInput}()},
\code{\link{rangeInput}()},
\code{\link{selectInput}()},
\code{\link{textInput}()}
}
\concept{inputs}
