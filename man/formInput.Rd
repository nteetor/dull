% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-form.R
\name{formInput}
\alias{formInput}
\alias{formSubmit}
\alias{updateFormInput}
\title{Form inputs}
\usage{
formInput(..., id, inline = FALSE)

formSubmit(label, value = label, ...)

updateFormInput(id, submit = FALSE, session = getDefaultReactiveDomain())
}
\arguments{
\item{...}{Any number of unnamed arguments passed as child elements to the
parent form element or named arguments passed as HTML attributes to the
parent element. At least one \code{formSubmit()} must be included.}

\item{id}{A character string specifying the id of the reactive input.}

\item{inline}{One of \code{TRUE} or \code{FALSE}, if \code{TRUE} the form and its child
elements are rendered in a horizontal row, defaults to \code{FALSE}. On small
viewports, think mobile device, \code{inline} intentionally has no effect and
the form will span multiple lines.}

\item{label}{A character string specifying the label of the form submit
button.}

\item{value}{A character string specifying the value of the form submit
button and the value of the form input when the button is clicked,
defaults to \code{label}.}

\item{submit}{One of \code{TRUE} or \code{FALSE} or a character string specifying
whether to trigger a form submission, defaults to \code{FALSE}. If a character
string, the form is submitted and the reactive value passed is the character
string specified.}

\item{session}{A reactive context, defaults to \code{\link[=getDefaultReactiveDomain]{getDefaultReactiveDomain()}}.}
}
\description{
Form inputs are a new reactive input. Form inputs are an alternative to
shiny's submit buttons. A form input is comprised of any number of inputs.
The value of these inputs will \emph{not} change until a form submit button within
the form input is clicked. A form input's reactive value depends on the
clicked form submit button. This allows you to distinguish between different
form submission types, think "login" versus "register".

A form submit button, \code{formSubmit()}, is a special type of button used to
control form input submission. A form input and its child reactive inputs
will \emph{never} update if a form submit button is not included in \code{...} passed
to \code{formInput()}.
}
\details{
\subsection{Getting started}{

\if{html}{\out{<div class="sourceCode r">}}\preformatted{card(
  .style \%>\%
    border("info") \%>\%
    width(50),
  header = "Please pick a flavor",
  formInput(
    id = "form1",
    formGroup(
      label = "Ice creams",
      radioInput(
        id = "flavor",
        choices = c("Mint", "Moose tracks", "Marble"),
      )
    ),
    formSubmit(
      .style \%>\% background("info"),
      label = "Make choice",
      value = "choice"
    )
  )
)
}\if{html}{\out{</div>}}\if{html}{\out{
<div class="card border border-info w-50">
<div class="card-header">Please pick a flavor</div>
<div class="card-body">
<form class="yonder-form" id="form1">
<div class="form-group">
<label>Ice creams</label>
<div class="yonder-radio" id="flavor">
<div class="custom-control custom-radio">
<input class="custom-control-input" type="radio" id="radio-433-345" name="flavor" value="Mint" checked autocomplete="off"/>
<label class="custom-control-label" for="radio-433-345">Mint</label>
</div>
<div class="custom-control custom-radio">
<input class="custom-control-input" type="radio" id="radio-665-165" name="flavor" value="Moose tracks" autocomplete="off"/>
<label class="custom-control-label" for="radio-665-165">Moose tracks</label>
</div>
<div class="custom-control custom-radio">
<input class="custom-control-input" type="radio" id="radio-332-323" name="flavor" value="Marble" autocomplete="off"/>
<label class="custom-control-label" for="radio-332-323">Marble</label>
<div class="valid-feedback"></div>
<div class="invalid-feedback"></div>
</div>
</div>
</div>
<button class="yonder-form-submit btn btn-blue bg-info" value="choice">Make choice</button>
</form>
</div>
</div>
}}

}

\subsection{Inline forms}{

When \code{inline} is \code{TRUE} you may want to adjust the right margin of each
child element for viewports larger than mobile,
\code{margin(right = c(sm = 2))}, see \code{\link[=margin]{margin()}}. You only need
to apply extra space for larger viewports because inline forms do not
take effect on small viewports.
}
}
\seealso{
Other inputs: 
\code{\link{buttonGroupInput}()},
\code{\link{buttonInput}()},
\code{\link{checkbarInput}()},
\code{\link{checkboxInput}()},
\code{\link{chipInput}()},
\code{\link{fileInput}()},
\code{\link{listGroupInput}()},
\code{\link{menuInput}()},
\code{\link{navInput}()},
\code{\link{radioInput}()},
\code{\link{radiobarInput}()},
\code{\link{rangeInput}()},
\code{\link{selectInput}()},
\code{\link{textInput}()}
}
\concept{inputs}
